apiVersion: apps/v1
kind: Deployment
metadata:
  name: soat-api
  namespace: soat-api
  labels:
    app: soat-api
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: soat-api
  template:
    metadata:
      labels:
        app: soat-api
        version: v1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: soat-api
        image: soat-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        # ConfigMap values
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: DB_PORT
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: DB_DATABASE
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: API_BASE_URL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: NODE_ENV
        - name: MERCADO_PAGO_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: MERCADO_PAGO_BASE_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: soat-api-config
              key: LOG_LEVEL
        # Secret values
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: soat-api-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: soat-api-secrets
              key: DB_PASSWORD
        - name: MERCADO_PAGO_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: soat-api-secrets
              key: MERCADO_PAGO_ACCESS_TOKEN
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: soat-api-secrets
              key: JWT_SECRET
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: soat-api-secrets
              key: WEBHOOK_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: varlog
          mountPath: /var/log
      volumes:
      - name: tmp
        emptyDir: {}
      - name: varlog
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300 